package algorithm1;


/**
 * Write a description of class QuickSortAlgo here.
 *
 * @author (your name)
 * @version (a version number or a date)
 */
import  java.util.Arrays;
public class QuickSortAlgo
{
    public static void main(String args[]){
        QuickSortAlgo xx = new QuickSortAlgo();
        //int[] A = {10,16,8,12,15,6,3,9,5,100};
         //int [] A = {1,3,2,6,4};
       // int [] A = {3,5,2,8,3,8,8,2,3,7,5,1,3,5};
        int [] A = {0,100,11,12,8,8,0,7,4,11,8,11,1,1,-6,100};
       
      
    
        System.out.println(Arrays.toString(xx.quickSort(0,A.length-1,A)));
         
       
    }

    public int[] quickSort(int l,int h, int[] A){
        if(l<h){
           int j=partition(l,h,A);
            quickSort(l,j-1,A);
            quickSort(j+1,h,A);
        }
        return A;
    }

    public int partition(int l,int h, int[] A){
        int pivote = A[l];
        int i =l; int j=h;
        while(i<j ){
        	do{
        		i++;
        	}   
        	while(i<=h&&A[i]<=pivote);
            //---
        	while(j>=l&&A[j]>pivote) {
        		j--;
        	}
        	
            if(i<j){//i should not equal or > j 
                swap(i,j,A);
            }
        }
        swap(l,j,A);
        return j;
    }
    public void swap(int i,int j,int A[]){
     int temp = A[i];
     A[i]=A[j];
     A[j] = temp;
    }

}

